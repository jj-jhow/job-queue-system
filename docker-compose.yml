# docker-compose.yml
version: '3.8' # Specify docker-compose version

services:
  # Redis Service
  redis:
    image: redis:7-alpine # Use official Redis image (Alpine version is smaller)
    container_name: jobqueue_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - jobqueue_network

  # Backend Service
  backend:
    build:
      context: ./apps/backend/backend-service
      dockerfile: Dockerfile
    container_name: jobqueue_backend
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - HOST=localhost
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JOB_QUEUE_NAME=local-job-queue
    depends_on:
      - redis
    networks:
      - jobqueue_network
    volumes:
      - ./apps/backend/backend-service:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist

  # Worker Service
  worker:
    build:
      context: ./apps/backend/worker-service
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - jobqueue_network
    volumes:
      - ./apps/backend/worker-service:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist
    deploy:
      replicas: 1 # Default replica count (can be overridden with --scale)

  frontend:
    build:
      context: ./apps/frontend/frontend-ui
      dockerfile: Dockerfile
    container_name: jobqueue_frontend
    ports:
      - "8080:80"
    environment:
      - PORT=80
      - HOST=localhost
      - NODE_ENV=development
    networks:
      - jobqueue_network
    volumes:
      - ./apps/frontend/frontend-ui:/usr/src/app
      - /usr/src/app/node_modules

# Define Networks
networks:
  jobqueue_network:
    driver: bridge

# Define Volumes
volumes:
  redis_data:
    driver: local
